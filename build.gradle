buildscript {
	ext {
		springBootVersion = '1.4.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven {
		url 'https://oss.sonatype.org/content/repositories/releases/'
	}
	maven {
		url 'http://central.maven.org/maven2/'
	}
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-cache')

	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')


	compile('com.alibaba:druid:1.0.31')
	compile('mysql:mysql-connector-java')

	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.2.1')
	compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.5'
	compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '1.4.7.RELEASE'
	compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter-test', version: '1.2.1'

	compileOnly('org.projectlombok:lombok')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.boot:spring-boot-test-autoconfigure')
	testCompile('org.springframework.security:spring-security-test')

}


bootRun {
	addResources = true
}

// 配置forked测试进程
test {
	forkEvery = 5												 					// 在forked测试进程中执行测试类的最大数量
	maxParallelForks = Runtime.runtime.availableProcessors() / 2 					// fork测试进程的最大数量；
}

// 为集成测试定义一个source set
sourceSets {
	integrationTest {
		java.srcDir file('src/integTest/java')							    		// 集成测试源目录
		resources.srcDir file('src/integTest/resources')							// 集成测试资源目录
//		resources.srcDir file('src/main/resources')									// 集成测试资源目录
		compileClasspath = sourceSets.main.output + configurations.testRuntime		// 指定编译时classpath
		runtimeClasspath = output + compileClasspath								// 指定运行时classpath
	}
}